<?php


function handleOperation($mode, $arg1 = '', $arg2 = '')
{
    if ($mode === 'gen' || $mode === 'generate' || $mode === '-g') {
        $command = "php src/core/utils/mono_cli/cli.php \"gen\" " . escapeshellarg($arg1) . " " . escapeshellarg($arg2);
        system($command);

        return;
    }

    if ($mode === 'serve' || $mode === '-s') {
        $port = 3000;
        $command = "php -S localhost:" . $port;
        while (!system($command)) {
            $port++;
            $command = "php -S localhost:" . $port;
            system($command);
        }

        return;
    }

    if ($mode === 'fill' || $mode === '-f') {
        $command = "php src/core/utils/mono_cli/cli.php \"fill\" " . escapeshellarg($arg1);
        system($command);

        return;
    }

    if ($mode === 'update' || $mode === '-u' && $arg1 === 'core') {
        echo "\nFetching core repository...\n";
        $dir = str_replace("\\", "/", __DIR__ . "\\src\\core");

        switch (PHP_OS_FAMILY) {
            case 'Windows':
                system("rmdir /S /Q $dir");
                system("git clone  https://github.com/zorncbllr/core.git " . __DIR__ . "\\src\\core");
                break;
            case 'Linux':
                system("rm -rf $dir");
                system("git clone  https://github.com/zorncbllr/core.git " . __DIR__ . "/src/core");
                break;
        }

        echo "\nCore files up to date.\n";

        return;
    }

    if ($mode === 'help' || $mode === '-h') {
        showHelp();

        return;
    }

    echo "  Invalid mono command.\n";
    showHelp();
    echo "\n\r Please refer to the usage options above.\n";
}

function showHelp()
{
    echo "
    Usage: php mono <mode> [arg1] [arg2]

    <modes>        <shorcut flags>            <arg1>              <arg2>
    generate            -g             controller  or  con       <filename>
                        -g             model       or  mod       <filename>
                        -g             view        or  vw        <filename>
                        -g             middleware  or  mid       <filename>
                        -g             service     or  ser       <filename>
                        -g             component   or  comp      <filename>

    fill                -f                    <model>
    serve               -s
    update              -u                     core
    help                -h
    ";
}

if ($argc < 2) {
    showHelp();
    exit(1);
}

$mode = $argv[1];
$arg1 = $argc > 2 ? $argv[2] : '';
$arg2 = $argc > 3 ? $argv[3] : '';

handleOperation($mode, $arg1, $arg2);
