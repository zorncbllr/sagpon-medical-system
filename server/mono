<?php

function handleOperation($mode, $arg1 = '', $arg2 = '')
{
    if ($mode === 'gen' || $mode === 'generate' || $mode === '-g') {
        $command = "php src/core/utils/mono_cli/cli.php \"gen\" " . escapeshellarg($arg1) . " " . escapeshellarg($arg2);
        system($command);
    } elseif ($mode === 'serve' || $mode === '-s') {
        $port = 3000;
        $command = "php -S localhost:" . $port;
        while (!system($command)) {
            $port++;
            $command = "php -S localhost:" . $port;
            system($command);
        }
    } elseif ($mode === 'fill' || $mode === '-f') {
        $command = "php src/core/utils/mono_cli/cli.php \"fill\" " . escapeshellarg($arg1);
        system($command);
    } elseif ($mode === 'update' || $mode === '-u' && $arg1 === 'core') {
        switch (PHP_OS_FAMILY) {
            case 'Windows':
                system("rmdir /S /Q " . __DIR__ . "\\src\\core");
                system("git clone  https://github.com/zorncbllr/core.git " . __DIR__ . "\\src\\core");
                break;
            case 'Linux':
                system("rm -rf " . __DIR__ . "/src/core");
                system("git clone  https://github.com/zorncbllr/core.git " . __DIR__ . "/src/core");
                break;
        }
    } else {
        echo "invalid mono command\n";
    }
}

if ($argc < 2) {
    echo "Usage: php mono <mode> [arg1] [arg2]\n";
    exit(1);
}

$mode = $argv[1];
$arg1 = $argc > 2 ? $argv[2] : '';
$arg2 = $argc > 3 ? $argv[3] : '';

handleOperation($mode, $arg1, $arg2);
